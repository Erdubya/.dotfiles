set -g default-terminal "screen-256color"

# remap prefix
unbind C-b
set-option -g prefix C-a

# split panes using | and -
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# Enable mouse mode (tmux 2.1 and above)
set -g mouse on

set -g set-clipboard off
set -g mode-keys vi

# don't rename windows automatically
set-option -g allow-rename off

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

#
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
#
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l
bind C-l send-keys 'C-l'

#
# VI copy mode, with linux system clipboard support
#
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "xclip -se c -i"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -se c -i"

#
# Style and Theme
#
set -g status-position top
set -g status-interval 1
set -g window-status-separator ""
set -g status-justify left

# colours
colour_dark="colour233"
colour_light="white"
colour_primary_text="colour255"
colour_status_text="colour240"
colour_primary="colour31"
colour_secondary="colour236"
colour_off_text="#ff000f"
colour_off_bg="colour240"

# Status bar colors
set -g status-style "fg=$colour_status_text,bg=$colour_dark"

# Left status bar
sl_separator="#[fg=$colour_secondary]"
sl_status="#{?#{==:#(tmux show-option -qv key-table),off},#[fg=$colour_off_text] OFF,#{?client_prefix,#[fg=$colour_primary] PRE,#[fg=$colour_secondary] STD}} $sl_separator"
set -g status-left-length 40
set -g status-left "$sl_status#[fg=$colour_primary] #S "

# Right status bar
sr_separator="#[fg=$colour_secondary]"
sr_datetime="$sr_separator #[fg=$colour_light]%h %m %H:%M"
sr_user="$sr_separator #[fg=$colour_primary]#(whoami)@#H"
set -g status-right-length 100
set -g status-right "$sr_user $sr_datetime"

# Window status
set -g window-status-format "  #I#F  #W  "
set -g window-status-current-format "#[fg=$colour_dark,bg=$colour_secondary]#[fg=$colour_primary,bg=$colour_secondary] #I#F  #W #[fg=$colour_secondary,bg=$colour_dark,nobold]"

# Window activity status
set -g window-status-activity-style "fg=colour245,bg=colour233"

# Pane border
set -g pane-border-style "bg=$colour_dark,fg=$colour_secondary"

# Active pane border
set -g pane-active-border-style "fg=$colour_primary,bg=$colour_dark"

# Pane number indicator
set -g display-panes-colour $colour_secondary
set -g display-panes-active-colour $colour_primary

# Clock mode
set -g clock-mode-colour $colour_primary
set -g clock-mode-style 24

# Message
set -g message-style "fg=$colour_primary,bg=$colour_dark"

# Command message
set -g message-command-style "fg=$colour_dark,bg=$colour_secondary"

#
# Remote and local sessions
#
if-shell 'test -n "$SSH_CLIENT"' 'source-file ~/.dotfiles/tmux/remote.tmux.conf'

bind -T root F12  \
  set prefix None \;\
  set key-table off \;\
  set status-left "$sl_status#[fg=$colour_off_text] #S " \;\
  set window-status-current-format "#[fg=$colour_off_text,bg=$colour_dark]  #I#F  #W  " \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-left \;\
  set -u window-status-current-format \;\
  refresh-client -S
  
