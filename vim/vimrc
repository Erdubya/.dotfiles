set nocompatible              " be iMproved, required

" Install vim-plug if not already installed
if has('nvim')
    let datapath = stdpath('data') . '/site/autoload/plug.vim'
    let plugpath = stdpath('data') . '/plugins'
else
    let datapath = $HOME . '/.vim/autoload/plug.vim'
    let plugpath = $HOME . '/.vim/plugins'
endif
if empty(glob(datapath))
    let url = 'https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
    execute 'silent !curl -fLo ' . datapath . ' --create-dirs ' . url
    autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" Init VimPlug
call plug#begin(plugpath)

" session management
Plug 'tpope/vim-obsession'

" fuzzy finder
Plug 'ctrlpvim/ctrlp.vim'

" directory sidebar
Plug 'scrooloose/nerdtree'

" auto-closing brackets, etc.
Plug 'Raimondi/delimitMate'

" airline status line
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

" common helper library
"Plug 'vim-scripts/L9'

" syntax checking and highlighting
Plug 'vim-syntastic/syntastic'

" combines with tmux config to allow seamless navigation
"Plug 'christoomey/vim-tmux-navigator'

" recursive diff
Plug 'will133/vim-dirdiff'

" dim colourscheme
Plug 'jeffkreeftmeijer/vim-dim'

" addtional syntax
Plug 'cespare/vim-toml'
Plug 'glench/vim-jinja2-syntax'

" All of your Plugins must be added before the following line
call plug#end()            " required

" ############################################
" SET COMMANDS

" Allow non-visible buffers
set hidden

" Activate mouse functionality
set mouse=a

" show hybrid number lines
set number relativenumber

" do not store global and local values in a session
" set ssop-=options
" do not store folds
" set ssop-=folds

" mapping delay 1000ms, keycode delay 10ms
set timeoutlen=1000 ttimeoutlen=10

" show existing tab with 4 spaces width
set tabstop=4
" when indenting with '>', use 4 spaces width
set shiftwidth=4
" On pressing tab, insert 4 spaces
set expandtab

" colorscheme
syntax enable
colorscheme dim

let g:airline_powerline_fonts = 1

" syntastic
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

" ############################################
" KEYMAPS
let mapleader="_"
let maplocalleader="\\"

map <C-n> :NERDTreeToggle<CR>

" ############################################
" AUTOCMDS

" change to hybrid mode on buffer enter 
:augroup numbertoggle
:  autocmd!
:  autocmd BufEnter,FocusGained,InsertLeave * set relativenumber
:  autocmd BufLeave,FocusLost,InsertEnter   * set norelativenumber
:augroup END
